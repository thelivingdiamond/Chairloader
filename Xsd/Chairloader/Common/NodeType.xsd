<?xml version="1.0" ?>
<xs:schema
    xmlns="https://thelivingdiamond.github.io/Chairloader/Xsd/Chairloader"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="https://thelivingdiamond.github.io/Chairloader/Xsd/Chairloader"
    elementFormDefault="qualified">
    <xs:annotation><xs:documentation>
        Node type the data model of a particular XML node and how it should be merged.
    </xs:documentation></xs:annotation>

    <!-- Type of a collection. -->
    <xs:simpleType name="CollectionType">
        <xs:restriction base="xs:string">
            <xs:pattern value="(dict|nodeDict|array)"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- <NodeType> -->
    <xs:complexType name="NodeType">
        <xs:annotation><xs:documentation>
            Defines the data model of an unnamed node. A named node may reference this type.
        </xs:documentation></xs:annotation>
        
        <!-- <Node> - Child nodes-->
        <xs:sequence>
            <!-- <Attributes> -->
            <xs:element name="Attributes" minOccurs="1" maxOccurs="1">
                <xs:complexType>
                    <xs:annotation><xs:documentation>
                        Defines the list of known/allowed attributes.
                    </xs:documentation></xs:annotation>

                    <!-- <Attributes> - Child nodes-->
                    <xs:sequence>
                        <!-- <Attribute> -->
                        <xs:element name="Attribute" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <!-- <Attribute> - Attributes -->
                                <xs:attribute name="name" type="xs:string" use="required">
                                    <xs:annotation><xs:documentation>
                                        Name of the attribute.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>

                                <xs:attribute name="type" type="xs:string" use="required">
                                    <xs:annotation><xs:documentation>
                                        Type of the attribute.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>

                                <xs:attribute name="required" type="xs:boolean" default="false">
                                    <xs:annotation><xs:documentation>
                                        Whether the attribute must be present.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>

                                <xs:attribute name="allowEmpty" type="xs:boolean" default="false">
                                    <xs:annotation><xs:documentation>
                                        Whether the attribute may be empty.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>

                                <xs:attribute name="readOnly" type="xs:boolean" default="false">
                                    <xs:annotation><xs:documentation>
                                        If true, mods won't be able to change the value of this attribute on existing nodes.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>

                                <xs:attribute name="generated" type="xs:boolean" default="false">
                                    <xs:annotation><xs:documentation>
                                        The attribute was generated by Chairloader's XML patches.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>

                                <xs:attribute name="comment" type="xs:string">
                                    <xs:annotation><xs:documentation>
                                        Comment describing the attribute.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>

                    <!-- <Attributes> - Attributes -->
                    <xs:attribute name="allowUnknown" type="xs:boolean" default="false">
                        <xs:annotation><xs:documentation>
                            If false, causes an error if an attribute is not listed here.
                        </xs:documentation></xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>

            <!-- <Patches> -->
            <xs:element name="Patches" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:annotation><xs:documentation>
                        Additional patches for the original file that must be applied for merging to work.
                    </xs:documentation></xs:annotation>

                    <xs:sequence>
                        <!-- <RemoveAttribute> -->
                        <xs:element name="RemoveAttribute" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:annotation><xs:documentation>
                                    Removes an attribute from this element. Used to remove patched attributes that were added
                                    in previous merging policy versions.
                                </xs:documentation></xs:annotation>

                                <xs:attribute name="name" type="xs:string" use="required">
                                    <xs:annotation><xs:documentation>
                                        Name of the attribute.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>

                        <!-- <AddChildIndex> -->
                        <xs:element name="AddChildIndex" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:annotation><xs:documentation>
                                    Adds an index attribute to all children.
                                </xs:documentation></xs:annotation>

                                <xs:attribute name="name" type="xs:string" use="required">
                                    <xs:annotation><xs:documentation>
                                        Name of the attribute.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>

                                <xs:attribute name="increment" type="xs:int" default="1000">
                                    <xs:annotation><xs:documentation>
                                        Per-element index increment.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>

                        <!-- <AddEntityGuid> -->
                        <xs:element name="AddEntityGuid" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:annotation><xs:documentation>
                                    Adds a GUID attribute if it doesn't exist.
                                </xs:documentation></xs:annotation>

                                <xs:sequence>
                                    <xs:element name="HashAttr" minOccurs="1" maxOccurs="unbounded" />
                                </xs:sequence>

                                <xs:attribute name="guidName" type="xs:string" use="required">
                                    <xs:annotation><xs:documentation>
                                        Name of the GUID attribute.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>

                                <xs:attribute name="flagName" type="xs:string" use="required">
                                    <xs:annotation><xs:documentation>
                                        Name of the GUID attribute.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- <Collection> -->
            <xs:element name="Collection" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:annotation><xs:documentation>
                        Defines the type of the collection and how child nodes should be merged.
                        If not set, child nodes are not allowed.
                    </xs:documentation></xs:annotation>

                    <!-- <Collection> - Child nodes-->
                    <xs:all>
                        <!-- <PrimaryKey> -->
                        <xs:element name="PrimaryKey" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:annotation><xs:documentation>
                                    If a dictionary, defines the key of the dictionary. All parts of the key must be equal to identify the node.
                                </xs:documentation></xs:annotation>

                                <!-- <PrimaryKey> - Child nodes-->
                                <xs:sequence>
                                    <xs:element name="ChildName" minOccurs="0" maxOccurs="1">
                                        <xs:complexType>
                                            <xs:annotation><xs:documentation>
                                                Use the child node name as part of the key.
                                            </xs:documentation></xs:annotation>
                                        </xs:complexType>
                                    </xs:element>

                                    <xs:element name="ChildAttribute" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:annotation><xs:documentation>
                                                Use a child attribute as part of the key. They must be present in all children.
                                            </xs:documentation></xs:annotation>
                                            
                                            <xs:attribute name="name" type="xs:string" use="required">
                                                <xs:annotation><xs:documentation>
                                                    The name of the child attribute.
                                                </xs:documentation></xs:annotation>
                                            </xs:attribute>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>

                        <!-- <ArrayIndexAttribute> -->
                        <xs:element name="ChildIndexAttribute" minOccurs="0" maxOccurs="1">
                            <xs:complexType>
                                <xs:annotation><xs:documentation>
                                    If an array, specifies the attrbute with the index in the child nodes.
                                </xs:documentation></xs:annotation>

                                <xs:attribute name="name" type="xs:string" use="required">
                                    <xs:annotation><xs:documentation>
                                        Name of the attribute.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>
                    </xs:all>

                    <!-- <Collection> - Attributes -->
                    <xs:attribute name="type" type="CollectionType" use="required">
                        <xs:annotation><xs:documentation>
                            The type of the collection.
                        </xs:documentation></xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>

            <!-- <ChildConstraints> -->
            <xs:element name="ChildConstraints" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:annotation><xs:documentation>
                        Defines additional constraints on immediate children.
                    </xs:documentation></xs:annotation>

                    <!-- <ChildConstraints> - Child nodes-->
                    <xs:sequence>
                        <!-- <UniqueAttribute> -->
                        <xs:element name="UniqueAttribute" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:annotation><xs:documentation>
                                    The value of a child attribute must be unique among all of its sibling nodes.
                                </xs:documentation></xs:annotation>

                                <!-- <UniqueAttribute> - Attributes-->
                                <xs:attribute name="name" type="xs:string" use="required">
                                    <xs:annotation><xs:documentation>
                                        Name of the attribute.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- <ChildNodes> -->
            <xs:element name="ChildNodes" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:annotation><xs:documentation>
                        Defines the allowed child nodes.
                    </xs:documentation></xs:annotation>

                    <!-- <ChildNodes> - Child nodes -->
                    <xs:choice maxOccurs="unbounded">
                        <xs:element name="Node" type="Node" minOccurs="0" maxOccurs="unbounded" />
                        <xs:element name="NodeByType" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:annotation><xs:documentation>
                                    References a predefined node type instead of defining a new one.
                                </xs:documentation></xs:annotation>
                                
                                <xs:attribute name="name" type="xs:string" use="required">
                                    <xs:annotation><xs:documentation>
                                        Name of the node.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>

                                <xs:attribute name="type" type="xs:string" use="required">
                                    <xs:annotation><xs:documentation>
                                        Name of the node type.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>
                                
                                <xs:attribute name="nameRegex" type="xs:boolean" default="false">
                                    <xs:annotation><xs:documentation>
                                        If true, name will be interpreted as a regular expression.
                                    </xs:documentation></xs:annotation>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:sequence>

        <!-- <Node> - Attributes-->
        <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation><xs:documentation>
                Name of the node/type.
            </xs:documentation></xs:annotation>
        </xs:attribute>

        <xs:attribute name="recursive" type="xs:boolean" default="false">
            <xs:annotation><xs:documentation>
                If true, this policy will apply to all unknown child nodes.
            </xs:documentation></xs:annotation>
        </xs:attribute>

        <xs:attribute name="textType" type="xs:string" default="">
            <xs:annotation><xs:documentation>
                If specified, the node may have text contents of the specified type. If empty, text is not allowed.
            </xs:documentation></xs:annotation>
        </xs:attribute>
        
        <xs:attribute name="allowEmptyText" type="xs:boolean" default="false">
            <xs:annotation><xs:documentation>
                If text is allowed and false, if text is empty, causes a validation error.
            </xs:documentation></xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="Node">
        <xs:complexContent>
            <xs:extension base="NodeType">
                <xs:attribute name="nameRegex" type="xs:boolean" default="false">
                    <xs:annotation><xs:documentation>
                        If true, name will be interpreted as a regular expression.
                    </xs:documentation></xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>
