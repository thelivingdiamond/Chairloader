#pragma once
struct ICVar;
struct IConsole;
struct IConsoleCmdArgs;

// Header: FromCpp
// CryEngine/renderdll/common/renderercvars.h
class CRendererCVars // Id=80106E2 Size=88
{
public:
	static inline auto CV_r_ShowDynTexturesFilter = PreyGlobal<ICVar*>(0x2B0EFB0);
	static inline auto CV_r_ShaderCompilerServer = PreyGlobal<ICVar*>(0x2B0EFB8);
	static inline auto CV_r_ShaderCompilerFolderName = PreyGlobal<ICVar*>(0x2B0EFC0);
	static inline auto CV_r_ShaderCompilerFolderSuffix = PreyGlobal<ICVar*>(0x2B0EFC8);
	static inline auto CV_r_ShaderEmailTags = PreyGlobal<ICVar*>(0x2B0EFD0);
	static inline auto CV_r_ShaderEmailCCs = PreyGlobal<ICVar*>(0x2B0EFD8);
	static inline auto CV_r_excludeshader = PreyGlobal<ICVar*>(0x2B0EFE0);
	static inline auto CV_r_excludemesh = PreyGlobal<ICVar*>(0x2B0EFE8);
	static inline auto CV_r_ShowTexture = PreyGlobal<ICVar*>(0x2B0EFF0);
	static inline auto CV_r_TexturesStreamingDebugfilter = PreyGlobal<ICVar*>(0x2B0EFF8);
	static inline auto CV_r_vsync = PreyGlobal<int>(0x2B0EFAC);
	static inline auto CV_r_overrideRefreshRate = PreyGlobal<float>(0x2B0F000);
	static inline auto CV_r_overrideScanlineOrder = PreyGlobal<int>(0x2B0F004);
	static inline auto CV_r_overrideDXGIOutput = PreyGlobal<int>(0x2B0F008);
	static inline auto CV_r_FullscreenPreemption = PreyGlobal<int>(0x226BCA4);
	static inline auto CV_r_SyncToFrameFence = PreyGlobal<int>(0x2B0F00C);
	static inline auto CV_r_GraphicsPipeline = PreyGlobal<int>(0x2B0E958);
	static inline auto CV_r_DeferredShadingTiled = PreyGlobal<int>(0x2B0E95C);
	static inline auto CV_r_DeferredShadingTiledDebug = PreyGlobal<int>(0x2B0E960);
	static inline auto CV_r_DeferredShadingTiledHairQuality = PreyGlobal<int>(0x2B0E964);
	static inline auto CV_r_DeferredShadingSSS = PreyGlobal<int>(0x2B0E968);
	static inline auto CV_r_MotionVectors = PreyGlobal<int>(0x2B0E96C);
	static inline auto CV_r_MotionBlur = PreyGlobal<int>(0x2B0E970);
	static inline auto CV_r_MotionBlurQuality = PreyGlobal<int>(0x2B0E974);
	static inline auto CV_r_MotionBlurGBufferVelocity = PreyGlobal<int>(0x2B0E978);
	static inline auto CV_r_MotionBlurThreshold = PreyGlobal<float>(0x2B0E97C);
	static inline auto CV_r_minimizeLatency = PreyGlobal<int>(0x2B0E980);
	static inline auto CV_r_DeferredShadingAmbientSClear = PreyGlobal<int>(0x2B0E984);
	static inline auto CV_r_batchtype = PreyGlobal<int>(0x2B0E988);
	static inline auto CV_r_SilhouettePOM = PreyGlobal<int>(0x2B0E98C);
	static inline auto CV_r_WaterTessellationHW = PreyGlobal<int>(0x2B0E990);
	static inline auto CV_r_tessellationdebug = PreyGlobal<int>(0x2B0E994);
	static inline auto CV_r_tessellationtrianglesize = PreyGlobal<float>(0x2B0E998);
	static inline auto CV_r_displacementfactor = PreyGlobal<float>(0x2B0E99C);
	static inline auto CV_r_geominstancingthreshold = PreyGlobal<int>(0x2B0E9A0);
	static inline auto CV_r_ShadowsDepthBoundNV = PreyGlobal<int>(0x2B0E9A4);
	static inline auto CV_r_ShadowsPCFiltering = PreyGlobal<int>(0x2B0E9A8);
	static inline auto CV_r_rc_autoinvoke = PreyGlobal<int>(0x2B0E9AC);
	static inline auto CV_r_Refraction = PreyGlobal<int>(0x2B0E9B0);
	static inline auto CV_r_PostProcessReset = PreyGlobal<int>(0x2B0E9B4);
	static inline auto CV_r_colorRangeCompression = PreyGlobal<int>(0x2B0E9B8);
	static inline auto CV_r_colorgrading_selectivecolor = PreyGlobal<int>(0x2B0E9BC);
	static inline auto CV_r_colorgrading_charts = PreyGlobal<int>(0x2B0E9C0);
	static inline auto CV_r_ColorgradingChartsCache = PreyGlobal<int>(0x2B0E9C4);
	static inline auto CV_r_ShaderCompilerPort = PreyGlobal<int>(0x2B0E9C8);
	static inline auto CV_r_ShowDynTexturesMaxCount = PreyGlobal<int>(0x2B0E9CC);
	static inline auto CV_r_ShaderCompilerDontCache = PreyGlobal<int>(0x2B0E9D0);
	static inline auto CV_r_dyntexmaxsize = PreyGlobal<int>(0x2B0E9D4);
	static inline auto CV_r_texmaxanisotropy = PreyGlobal<int>(0x2B0E9D8);
	static inline auto CV_r_texturesskiplowermips = PreyGlobal<int>(0x2B0E9DC);
	static inline auto CV_r_rendertargetpoolsize = PreyGlobal<int>(0x2B0E9E0);
	static inline auto CV_r_texturesstreamingsync = PreyGlobal<int>(0x2B0E9E4);
	static inline auto CV_r_watercausticsdeferred = PreyGlobal<int>(0x2B0E9E8);
	static inline auto CV_r_WaterUpdateThread = PreyGlobal<int>(0x2B0E9EC);
	static inline auto CV_r_watercaustics = PreyGlobal<int>(0x2B0E9F0);
	static inline auto CV_r_watervolumecaustics = PreyGlobal<int>(0x2B0E9F4);
	static inline auto CV_r_watervolumecausticsdensity = PreyGlobal<int>(0x2B0E9F8);
	static inline auto CV_r_watervolumecausticsresolution = PreyGlobal<int>(0x2B0E9FC);
	static inline auto CV_r_shaderspreactivate = PreyGlobal<int>(0x2B0EA00);
	static inline auto CV_r_shadersremotecompiler = PreyGlobal<int>(0x2B0EA04);
	static inline auto CV_r_shadersasynccompiling = PreyGlobal<int>(0x2B0EA08);
	static inline auto CV_r_shadersasyncactivation = PreyGlobal<int>(0x2B0EA0C);
	static inline auto CV_r_shadersasyncmaxthreads = PreyGlobal<int>(0x2B0EA10);
	static inline auto CV_r_shaderscachedeterministic = PreyGlobal<int>(0x2B0EA14);
	static inline auto CV_r_shaderssubmitrequestline = PreyGlobal<int>(0x2B0EA18);
	static inline auto CV_r_shaderslogcachemisses = PreyGlobal<int>(0x2B0EA1C);
	static inline auto CV_r_meshpoolsize = PreyGlobal<int>(0x2B0EA20);
	static inline auto CV_r_meshinstancepoolsize = PreyGlobal<int>(0x2B0EA24);
	static inline auto CV_r_multigpu = PreyGlobal<int>(0x2B0EA28);
	static inline auto CV_r_beams = PreyGlobal<int>(0x2B0EA2C);
	static inline auto CV_r_nodrawnear = PreyGlobal<int>(0x2B0EA30);
	static inline auto CV_r_DrawNearShadows = PreyGlobal<int>(0x2B0EA34);
	static inline auto CV_r_scissor = PreyGlobal<int>(0x2B0EA38);
	static inline auto CV_r_usezpass = PreyGlobal<int>(0x2B0EA3C);
	static inline auto CV_r_ShowVideoMemoryStats = PreyGlobal<int>(0x2B0EA40);
	static inline auto CV_r_TexturesStreamingDebugMinSize = PreyGlobal<int>(0x2B0EA44);
	static inline auto CV_r_TexturesStreamingDebugMinMip = PreyGlobal<int>(0x2B0EA48);
	static inline auto CV_r_enableAltTab = PreyGlobal<int>(0x2B0EA4C);
	static inline auto CV_r_DynTexSourceSharedRTWidth = PreyGlobal<int>(0x2B0EA50);
	static inline auto CV_r_DynTexSourceSharedRTHeight = PreyGlobal<int>(0x2B0EA54);
	static inline auto CV_r_DynTexSourceUseSharedRT = PreyGlobal<int>(0x2B0EA58);
	static inline auto CV_r_ScreenShotFileName = PreyGlobal<ICVar*>(0x2B0EA60);
	static inline auto CV_r_GetScreenShot = PreyGlobal<int>(0x2B0EA5C);
	static inline auto CV_r_BreakOnError = PreyGlobal<int>(0x2B0EA68);
	static inline auto CV_r_TexturesStreamPoolSize = PreyGlobal<int>(0x2B0EA6C);
	static inline auto CV_r_TexturesStreamPoolSecondarySize = PreyGlobal<int>(0x2B0EA70);
	static inline auto CV_r_ReprojectOnlyStaticObjects = PreyGlobal<int>(0x2B0EA74);
	static inline auto CV_r_ReadZBufferDirectlyFromVMEM = PreyGlobal<int>(0x2B0EA78);
	static inline auto CV_r_durango_async_dips = PreyGlobal<int>(0x2B0EA7C);
	static inline auto CV_r_durango_async_dips_sync = PreyGlobal<int>(0x2B0EA80);
	static inline auto CV_r_D3D12SubmissionThread = PreyGlobal<int>(0x2B0EA84);
	static inline auto CV_r_D3D12WaitableSwapChain = PreyGlobal<int>(0x2B0EA88);
	static inline auto CV_r_D3D12BatchResourceBarriers = PreyGlobal<int>(0x2B0EA8C);
	static inline auto CV_r_D3D12EarlyResourceBarriers = PreyGlobal<int>(0x2B0EA90);
	static inline auto CV_r_D3D12AsynchronousCompute = PreyGlobal<int>(0x2B0EA94);
	static inline auto CV_r_D3D12HardwareComputeQueue = PreyGlobal<int>(0x2B0EA98);
	static inline auto CV_r_D3D12HardwareCopyQueue = PreyGlobal<int>(0x2B0EA9C);
	static inline auto CV_r_ReverseDepth = PreyGlobal<int>(0x2B0EAA0);
	static inline auto CV_r_EnableDebugLayer = PreyGlobal<int>(0x2B0EAA4);
	static inline auto CV_r_NoDraw = PreyGlobal<int>(0x2B0EAA8);
	static inline auto CV_r_UpdateInstances = PreyGlobal<int>(0x2B0EAAC);
	static inline auto CV_r_stats = PreyGlobal<int>(0x2B0EAB0);
	static inline auto CV_r_statsMinDrawcalls = PreyGlobal<int>(0x2B0EAB4);
	static inline auto CV_r_profiler = PreyGlobal<int>(0x2B0EAB8);
	static inline auto CV_r_profilerTargetFPS = PreyGlobal<float>(0x2B0EABC);
	static inline auto CV_r_LightPropagationVolumes = PreyGlobal<int>(0x2B0EAC0);
	static inline auto CV_r_ShadowPoolMaxFrames = PreyGlobal<int>(0x2B0EAC4);
	static inline auto CV_r_predicatedtiling = PreyGlobal<int>(0x2B0EAC8);
	static inline auto CV_r_useESRAM = PreyGlobal<int>(0x2B0EACC);
	static inline auto CV_r_multithreaded = PreyGlobal<int>(0x2B0EAD0);
	static inline auto CV_r_multithreadedDrawing = PreyGlobal<int>(0x2B0EAD4);
	static inline auto CV_r_multithreadedDrawingCoalesceMode = PreyGlobal<int>(0x2B0EAD8);
	static inline auto CV_r_multithreadedDrawingMinNonJobs = PreyGlobal<int>(0x2B0EADC);
	static inline auto CV_r_multithreadedDrawingMinJobSize = PreyGlobal<int>(0x2B0EAE0);
	static inline auto CV_r_deferredshadingLightVolumes = PreyGlobal<int>(0x2B0EAE4);
	static inline auto CV_r_deferredDecals = PreyGlobal<int>(0x2B0EAE8);
	static inline auto CV_r_deferredDecalsDebug = PreyGlobal<int>(0x2B0EAEC);
	static inline auto CV_r_DeferredShadingScissor = PreyGlobal<int>(0x2B0EAF0);
	static inline auto CV_r_DeferredShadingDebug = PreyGlobal<int>(0x2B0EAF4);
	static inline auto CV_r_DeferredShadingDebugGBuffer = PreyGlobal<int>(0x2B0EAF8);
	static inline auto CV_r_DeferredShadingEnvProbes = PreyGlobal<int>(0x2B0EAFC);
	static inline auto CV_r_DeferredShadingAmbient = PreyGlobal<int>(0x2B0EB00);
	static inline auto CV_r_DeferredShadingAmbientLights = PreyGlobal<int>(0x2B0EB04);
	static inline auto CV_r_DeferredShadingLights = PreyGlobal<int>(0x2B0EB08);
	static inline auto CV_r_DeferredShadingAreaLights = PreyGlobal<int>(0x2B0EB0C);
	static inline auto CV_r_DeferredShadingTiledLightsPriority = PreyGlobal<int>(0x2B0EB10);
	static inline auto CV_r_DeferredShadingGameplayLightBias = PreyGlobal<float>(0x2B0EB14);
	static inline auto CV_r_DeferredShadingStencilPrepass = PreyGlobal<int>(0x2B0EB18);
	static inline auto CV_r_PixelOutputMode = PreyGlobal<int>(0x2B0EB1C);
	static inline auto CV_r_HDRRendering = PreyGlobal<int>(0x2B0EB20);
	static inline auto CV_r_HDRDebug = PreyGlobal<int>(0x2B0EB24);
	static inline auto CV_r_HDRBloom = PreyGlobal<int>(0x2B0EB28);
	static inline auto CV_r_HDRBloomQuality = PreyGlobal<int>(0x2B0EB2C);
	static inline auto CV_r_HDRVignetting = PreyGlobal<int>(0x2B0EB30);
	static inline auto CV_r_HDRTexFormat = PreyGlobal<int>(0x2B0EB34);
	static inline auto CV_r_HDRRangeAdapt = PreyGlobal<int>(0x2B0EB38);
	static inline auto CV_r_HDREyeAdaptationMode = PreyGlobal<int>(0x2B0EB3C);
	static inline auto CV_r_geominstancing = PreyGlobal<int>(0x2B0EB40);
	static inline auto CV_r_geominstancingdebug = PreyGlobal<int>(0x2B0EB44);
	static inline auto CV_r_materialsbatching = PreyGlobal<int>(0x2B0EB48);
	static inline auto CV_r_UseShadowsPool = PreyGlobal<int>(0x2B0EB4C);
	static inline auto CV_r_shadowtexformat = PreyGlobal<int>(0x2B0EB50);
	static inline auto CV_r_ShadowsMaskResolution = PreyGlobal<int>(0x2B0EB54);
	static inline auto CV_r_ShadowsMaskDownScale = PreyGlobal<int>(0x2B0EB58);
	static inline auto CV_r_CBufferUseNativeDepth = PreyGlobal<int>(0x2B0EB5C);
	static inline auto CV_r_ShadowsStencilPrePass = PreyGlobal<int>(0x2B0EB60);
	static inline auto CV_r_ShadowMaskStencilPrepass = PreyGlobal<int>(0x2B0EB64);
	static inline auto CV_r_ShadowsGridAligned = PreyGlobal<int>(0x2B0EB68);
	static inline auto CV_r_ShadowPass = PreyGlobal<int>(0x2B0EB6C);
	static inline auto CV_r_ShadowGen = PreyGlobal<int>(0x2B0EB70);
	static inline auto CV_r_ShadowGenDepthClip = PreyGlobal<int>(0x2B0EB74);
	static inline auto CV_r_ShadowsUseClipVolume = PreyGlobal<int>(0x2B0EB78);
	static inline auto CV_r_shadowblur = PreyGlobal<int>(0x2B0EB7C);
	static inline auto CV_r_ShadowGenMode = PreyGlobal<int>(0x2B0EB80);
	static inline auto CV_r_ShadowsCache = PreyGlobal<int>(0x2B0EB84);
	static inline auto CV_r_ShadowsCacheFormat = PreyGlobal<int>(0x2B0EB88);
	static inline auto CV_r_ShadowsNearestMapResolution = PreyGlobal<int>(0x2B0EB8C);
	static inline auto CV_r_ShadowsScreenSpace = PreyGlobal<int>(0x2B0EB90);
	static inline auto CV_r_deferredshadingDBTstencil = PreyGlobal<int>(0x2B0EB94);
	static inline auto CV_r_sunshafts = PreyGlobal<int>(0x2B0EB98);
	static inline auto CV_r_MergeShadowDrawcalls = PreyGlobal<int>(0x2B0EB9C);
	static inline auto CV_r_PostProcess_CB = PreyGlobal<int>(0x2B0EBA0);
	static inline auto CV_r_PostProcess = PreyGlobal<int>(0x2B0EBA4);
	static inline auto CV_r_PostProcessFilters = PreyGlobal<int>(0x2B0EBA8);
	static inline auto CV_r_PostProcessGameFx = PreyGlobal<int>(0x2B0EBAC);
	static inline auto CV_r_PostProcessParamsBlending = PreyGlobal<int>(0x2B0EBB0);
	static inline auto CV_r_colorgrading = PreyGlobal<int>(0x2B0EBB4);
	static inline auto CV_r_colorgrading_levels = PreyGlobal<int>(0x2B0EBB8);
	static inline auto CV_r_colorgrading_filters = PreyGlobal<int>(0x2B0EBBC);
	static inline auto CV_r_showdyntextures = PreyGlobal<int>(0x2B0EBC0);
	static inline auto CV_r_shownormals = PreyGlobal<int>(0x2B0EBC4);
	static inline auto CV_r_showlines = PreyGlobal<int>(0x2B0EBC8);
	static inline auto CV_r_showtangents = PreyGlobal<int>(0x2B0EBCC);
	static inline auto CV_r_showtimegraph = PreyGlobal<int>(0x2B0EBD0);
	static inline auto CV_r_DebugFontRendering = PreyGlobal<int>(0x2B0EBD4);
	static inline auto CV_profileStreaming = PreyGlobal<int>(0x2B0EBD8);
	static inline auto CV_r_graphstyle = PreyGlobal<int>(0x2B0EBDC);
	static inline auto CV_r_showbufferusage = PreyGlobal<int>(0x2B0EBE0);
	static inline auto CV_r_ProfileShadersSmooth = PreyGlobal<int>(0x2B0EBE4);
	static inline auto CV_r_ProfileShadersGroupByName = PreyGlobal<int>(0x2B0EBE8);
	static inline auto CV_r_texpostponeloading = PreyGlobal<int>(0x2B0EBEC);
	static inline auto CV_r_texlog = PreyGlobal<int>(0x2B0EBF0);
	static inline auto CV_r_texnoload = PreyGlobal<int>(0x2B0EBF4);
	static inline auto CV_r_texturecompiling = PreyGlobal<int>(0x2B0EBF8);
	static inline auto CV_r_texturecompilingIndicator = PreyGlobal<int>(0x2B0EBFC);
	static inline auto CV_r_texturesstreaming = PreyGlobal<int>(0x2B0EC00);
	static inline auto CV_r_TexturesStreamingDebug = PreyGlobal<int>(0x2B0EC04);
	static inline auto CV_r_texturesstreamingnoupload = PreyGlobal<int>(0x2B0EC08);
	static inline auto CV_r_texturesstreamingonlyvideo = PreyGlobal<int>(0x2B0EC0C);
	static inline auto CV_r_texturesstreamingmipfading = PreyGlobal<int>(0x2B0EC10);
	static inline auto CV_r_texturesstreamingUpdateType = PreyGlobal<int>(0x2B0EC14);
	static inline auto CV_r_texturesstreamingPrecacheRounds = PreyGlobal<int>(0x2B0EC18);
	static inline auto CV_r_texturesstreamingSuppress = PreyGlobal<int>(0x2B0EC1C);
	static inline auto CV_r_texturesstreamingSkipMips = PreyGlobal<int>(0x2B0EC20);
	static inline auto CV_r_texturesstreamingMinUsableMips = PreyGlobal<int>(0x2B0EC24);
	static inline auto CV_r_texturesstreamingJobUpdate = PreyGlobal<int>(0x2B0EC28);
	static inline auto CV_r_texturesstreamingDeferred = PreyGlobal<int>(0x2B0EC2C);
	static inline auto CV_r_texturesstreamingPostponeMips = PreyGlobal<int>(0x2B0EC30);
	static inline auto CV_r_texturesstreamingPostponeThresholdMip = PreyGlobal<int>(0x2B0EC34);
	static inline auto CV_r_texturesstreamingMinReadSizeKB = PreyGlobal<int>(0x2B0EC38);
	static inline auto CV_r_envtexresolution = PreyGlobal<int>(0x2B0EC3C);
	static inline auto CV_r_waterreflections_mgpu = PreyGlobal<int>(0x2B0EC40);
	static inline auto CV_r_waterreflections_use_min_offset = PreyGlobal<int>(0x2B0EC44);
	static inline auto CV_r_waterreflections = PreyGlobal<int>(0x2B0EC48);
	static inline auto CV_r_waterreflections_quality = PreyGlobal<int>(0x2B0EC4C);
	static inline auto CV_r_water_godrays = PreyGlobal<int>(0x2B0EC50);
	static inline auto CV_r_reflections = PreyGlobal<int>(0x2B0EC54);
	static inline auto CV_r_reflections_quality = PreyGlobal<int>(0x2B0EC58);
	static inline auto CV_r_dof = PreyGlobal<int>(0x2B0EC5C);
	static inline auto CV_r_texNoAnisoAlphaTest = PreyGlobal<int>(0x2B0EC60);
	static inline auto CV_r_reloadshaders = PreyGlobal<int>(0x2B0EC64);
	static inline auto CV_r_detailtextures = PreyGlobal<int>(0x2B0EC68);
	static inline auto CV_r_texbindmode = PreyGlobal<int>(0x2B0EC6C);
	static inline auto CV_r_nodrawshaders = PreyGlobal<int>(0x2B0EC70);
	static inline auto CV_r_shadersdebug = PreyGlobal<int>(0x2B0EC74);
	static inline auto CV_r_shadersignoreincludeschanging = PreyGlobal<int>(0x2B0EC78);
	static inline auto CV_r_shaderslazyunload = PreyGlobal<int>(0x2B0EC7C);
	static inline auto CV_r_shadersAllowCompilation = PreyGlobal<int>(0x2B0EC80);
	static inline auto CV_r_shaderscompileautoactivate = PreyGlobal<int>(0x2B0EC84);
	static inline auto CV_r_shadersediting = PreyGlobal<int>(0x2B0EC88);
	static inline auto CV_r_ReflectTextureSlots = PreyGlobal<int>(0x2B0EC8C);
	static inline auto CV_r_debugrendermode = PreyGlobal<int>(0x2B0EC90);
	static inline auto CV_r_debugrefraction = PreyGlobal<int>(0x2B0EC94);
	static inline auto CV_r_meshprecache = PreyGlobal<int>(0x2B0EC98);
	static inline auto CV_r_validateDraw = PreyGlobal<int>(0x2B0EC9C);
	static inline auto CV_r_flares = PreyGlobal<int>(0x226BCA0);
	static inline auto CV_r_flareHqShafts = PreyGlobal<int>(0x2B0ECA0);
	static inline auto CV_r_ZPassDepthSorting = PreyGlobal<int>(0x2B0ECA4);
	static inline auto CV_r_TransparentPasses = PreyGlobal<int>(0x2B0ECA8);
	static inline auto CV_r_SkipAlphaTested = PreyGlobal<int>(0x2B0ECAC);
	static inline auto CV_r_TranspDepthFixup = PreyGlobal<int>(0x2B0ECB0);
	static inline auto CV_r_usehwskinning = PreyGlobal<int>(0x2B0ECB4);
	static inline auto CV_r_ParticlesSoftIsec = PreyGlobal<int>(0x2B0ECB8);
	static inline auto CV_r_ParticlesRefraction = PreyGlobal<int>(0x2B0ECBC);
	static inline auto CV_r_ParticlesTessellation = PreyGlobal<int>(0x2B0ECC0);
	static inline auto CV_r_ParticlesTessellationTriSize = PreyGlobal<int>(0x2B0ECC4);
	static inline auto CV_r_ParticlesAmountGI = PreyGlobal<float>(0x2B0ECC8);
	static inline auto CV_r_ParticlesHalfRes = PreyGlobal<int>(0x2B0ECCC);
	static inline auto CV_r_ParticlesHalfResAmount = PreyGlobal<int>(0x2B0ECD0);
	static inline auto CV_r_ParticlesHalfResBlendMode = PreyGlobal<int>(0x2B0ECD4);
	static inline auto CV_r_ParticlesInstanceVertices = PreyGlobal<int>(0x2B0ECD8);
	static inline auto CV_r_AntialiasingModeEditor = PreyGlobal<int>(0x2B0ECDC);
	static inline auto CV_r_AntialiasingModeDebug = PreyGlobal<int>(0x2B0ECE0);
	static inline auto CV_r_rain = PreyGlobal<int>(0x2B0ECE4);
	static inline auto CV_r_rain_ignore_nearest = PreyGlobal<int>(0x2B0ECE8);
	static inline auto CV_r_snow = PreyGlobal<int>(0x2B0ECEC);
	static inline auto CV_r_snow_halfres = PreyGlobal<int>(0x2B0ECF0);
	static inline auto CV_r_snow_displacement = PreyGlobal<int>(0x2B0ECF4);
	static inline auto CV_r_snowFlakeClusters = PreyGlobal<int>(0x2B0ECF8);
	static inline auto CV_r_customvisions = PreyGlobal<int>(0x2B0ECFC);
	static inline auto CV_r_DofMode = PreyGlobal<int>(0x2B0ED00);
	static inline auto CV_r_DofBokehQuality = PreyGlobal<int>(0x2B0ED04);
	static inline auto CV_r_nohwgamma = PreyGlobal<int>(0x2B0ED08);
	static inline auto CV_r_wireframe = PreyGlobal<int>(0x2B0ED0C);
	static inline auto CV_r_printmemoryleaks = PreyGlobal<int>(0x2B0ED10);
	static inline auto CV_r_releaseallresourcesonexit = PreyGlobal<int>(0x2B0ED14);
	static inline auto CV_r_character_nodeform = PreyGlobal<int>(0x2B0ED18);
	static inline auto CV_r_ZPassOnly = PreyGlobal<int>(0x2B0ED1C);
	static inline auto CV_r_VegetationAlphaTestOnly = PreyGlobal<int>(0x2B0ED20);
	static inline auto CV_r_measureoverdraw = PreyGlobal<int>(0x2B0ED24);
	static inline auto CV_r_ShowLightBounds = PreyGlobal<int>(0x2B0ED28);
	static inline auto CV_r_MergeRenderChunks = PreyGlobal<int>(0x2B0ED2C);
	static inline auto CV_r_TextureCompressor = PreyGlobal<int>(0x2B0ED30);
	static inline auto CV_r_TexturesStreamingDebugDumpIntoLog = PreyGlobal<int>(0x2B0ED34);
	static inline auto CV_e_DebugTexelDensity = PreyGlobal<int>(0x2B0ED38);
	static inline auto CV_r_RefractionPartialResolves = PreyGlobal<int>(0x2B0ED3C);
	static inline auto CV_r_RefractionPartialResolvesDebug = PreyGlobal<int>(0x2B0ED40);
	static inline auto CV_r_Batching = PreyGlobal<int>(0x2B0ED44);
	static inline auto CV_r_Unlit = PreyGlobal<int>(0x2B0ED48);
	static inline auto CV_r_HideSunInCubemaps = PreyGlobal<int>(0x2B0ED4C);
	static inline auto CV_r_ParticlesDebug = PreyGlobal<int>(0x2B0ED50);
	static inline auto CV_e_DebugRenderMode = PreyGlobal<int>(0x2B0ED54);
	static inline auto CV_r_DebugAmbientEnable = PreyGlobal<int>(0x2B0ED58);
	static inline auto CV_r_ArkLateNearTransparency = PreyGlobal<int>(0x2B0ED5C);
	static inline auto CV_r_ArkStarsMoveWithSun = PreyGlobal<int>(0x2B0ED60);
	static inline auto CV_r_ArkStarOffsetPitch = PreyGlobal<float>(0x2B0ED64);
	static inline auto CV_r_ArkStarOffsetRoll = PreyGlobal<float>(0x2B0ED68);
	static inline auto CV_r_ArkStarOffsetYaw = PreyGlobal<float>(0x2B0ED6C);
	static inline auto CV_r_ZPrepassMaxDist = PreyGlobal<float>(0x2B0ED70);
	static inline auto CV_r_FlaresChromaShift = PreyGlobal<float>(0x2B0ED74);
	static inline auto CV_r_FlaresIrisShaftMaxPolyNum = PreyGlobal<int>(0x2B0ED78);
	static inline auto CV_r_FlaresTessellationRatio = PreyGlobal<float>(0x2B0ED7C);
	static inline auto CV_r_drawnearfov = PreyGlobal<float>(0x2B0ED80);
	static inline auto CV_r_measureoverdrawscale = PreyGlobal<float>(0x2B0ED84);
	static inline auto CV_r_DeferredShadingLightLodRatio = PreyGlobal<float>(0x2B0ED88);
	static inline auto CV_r_DeferredShadingLightStencilRatio = PreyGlobal<float>(0x2B0ED8C);
	static inline auto CV_r_rainDistMultiplier = PreyGlobal<float>(0x2B0ED90);
	static inline auto CV_r_rainOccluderSizeTreshold = PreyGlobal<float>(0x2B0ED94);
	static inline auto CV_r_HDRRangeAdaptMaxRange = PreyGlobal<float>(0x2B0ED98);
	static inline auto CV_r_HDRRangeAdaptMax = PreyGlobal<float>(0x2B0ED9C);
	static inline auto CV_r_HDRRangeAdaptLBufferMaxRange = PreyGlobal<float>(0x2B0EDA0);
	static inline auto CV_r_HDRRangeAdaptLBufferMax = PreyGlobal<float>(0x2B0EDA4);
	static inline auto CV_r_HDRRangeAdaptationSpeed = PreyGlobal<float>(0x2B0EDA8);
	static inline auto CV_r_HDREyeAdaptationSpeed = PreyGlobal<float>(0x2B0EDAC);
	static inline auto CV_r_HDRGrainAmount = PreyGlobal<float>(0x2B0EDB0);
	static inline auto CV_r_Sharpening = PreyGlobal<float>(0x2B0EDB4);
	static inline auto CV_r_ChromaticAberration = PreyGlobal<float>(0x2B0EDB8);
	static inline auto CV_r_dofMinZ = PreyGlobal<float>(0x2B0EDBC);
	static inline auto CV_r_dofMinZScale = PreyGlobal<float>(0x2B0EDC0);
	static inline auto CV_r_dofMinZBlendMult = PreyGlobal<float>(0x2B0EDC4);
	static inline auto CV_r_dofDilation = PreyGlobal<float>(0x2B0EDC8);
	static inline auto CV_r_ShadowsBias = PreyGlobal<float>(0x2B0EDCC);
	static inline auto CV_r_shadowbluriness = PreyGlobal<float>(0x2B0EDD0);
	static inline auto CV_r_ShadowsAdaptionRangeClamp = PreyGlobal<float>(0x2B0EDD4);
	static inline auto CV_r_ShadowsAdaptionSize = PreyGlobal<float>(0x2B0EDD8);
	static inline auto CV_r_ShadowsAdaptionMin = PreyGlobal<float>(0x2B0EDDC);
	static inline auto CV_r_ShadowsParticleKernelSize = PreyGlobal<float>(0x2B0EDE0);
	static inline auto CV_r_ShadowsParticleJitterAmount = PreyGlobal<float>(0x2B0EDE4);
	static inline auto CV_r_ShadowsParticleAnimJitterAmount = PreyGlobal<float>(0x2B0EDE8);
	static inline auto CV_r_ShadowsParticleNormalEffect = PreyGlobal<float>(0x2B0EDEC);
	static inline auto CV_r_shadow_jittering = PreyGlobal<float>(0x2B0EDF0);
	static inline auto CV_r_ShadowPoolMaxTimeslicedUpdatesPerFrame = PreyGlobal<int>(0x2B0EDF4);
	static inline auto CV_r_ShadowCastingLightsMaxCount = PreyGlobal<int>(0x2B0EDF8);
	static inline auto CV_r_RenderMeshHashGridUnitSize = PreyGlobal<float>(0x2B0EDFC);
	static inline auto CV_r_PostprocessParamsBlendingTimeScale = PreyGlobal<float>(0x2B0EE00);
	static inline auto CV_r_normalslength = PreyGlobal<float>(0x2B0EE04);
	static inline auto CV_r_TexelsPerMeter = PreyGlobal<float>(0x2B0EE08);
	static inline auto CV_r_TexturesStreamingMaxRequestedMB = PreyGlobal<float>(0x2B0EE0C);
	static inline auto CV_r_TexturesStreamingMaxRequestedJobs = PreyGlobal<int>(0x2B0EE10);
	static inline auto CV_r_TexturesStreamingMipBias = PreyGlobal<float>(0x2B0EE14);
	static inline auto CV_r_envtexupdateinterval = PreyGlobal<float>(0x2B0EE18);
	static inline auto CV_r_TextureLodDistanceRatio = PreyGlobal<float>(0x2B0EE1C);
	static inline auto CV_r_water_godrays_distortion = PreyGlobal<float>(0x2B0EE20);
	static inline auto CV_r_waterupdateFactor = PreyGlobal<float>(0x2B0EE24);
	static inline auto CV_r_waterupdateDistance = PreyGlobal<float>(0x2B0EE28);
	static inline auto CV_r_waterreflections_min_visible_pixels_update = PreyGlobal<float>(0x2B0EE2C);
	static inline auto CV_r_waterreflections_minvis_updatefactormul = PreyGlobal<float>(0x2B0EE30);
	static inline auto CV_r_waterreflections_minvis_updatedistancemul = PreyGlobal<float>(0x2B0EE34);
	static inline auto CV_r_waterreflections_offset = PreyGlobal<float>(0x2B0EE38);
	static inline auto CV_r_watercausticsdistance = PreyGlobal<float>(0x2B0EE3C);
	static inline auto CV_r_watervolumecausticssnapfactor = PreyGlobal<float>(0x2B0EE40);
	static inline auto CV_r_watervolumecausticsmaxdistance = PreyGlobal<float>(0x2B0EE44);
	static inline auto CV_r_detaildistance = PreyGlobal<float>(0x2B0EE48);
	static inline auto CV_r_DrawNearZRange = PreyGlobal<float>(0x2B0EE4C);
	static inline auto CV_r_DrawNearFarPlane = PreyGlobal<float>(0x2B0EE50);
	static inline auto CV_r_rainamount = PreyGlobal<float>(0x2B0EE54);
	static inline auto CV_r_MotionBlurShutterSpeed = PreyGlobal<float>(0x2B0EE58);
	static inline auto CV_r_MotionBlurCameraMotionScale = PreyGlobal<float>(0x2B0EE5C);
	static inline auto CV_r_MotionBlurMaxViewDist = PreyGlobal<float>(0x2B0EE60);
	static inline auto CV_r_gamma = PreyGlobal<float>(0x2B0EE64);
	static inline auto CV_r_contrast = PreyGlobal<float>(0x2B0EE68);
	static inline auto CV_r_brightness = PreyGlobal<float>(0x2B0EE6C);
	static inline auto CV_r_brightnessOffset = PreyGlobal<float>(0x2B0EE70);
	static inline auto CV_r_ZFightingDepthScale = PreyGlobal<float>(0x2B0EE74);
	static inline auto CV_r_ZFightingExtrude = PreyGlobal<float>(0x2B0EE78);
	static inline auto CV_r_FlashMatTexResQuality = PreyGlobal<float>(0x2B0EE7C);
	static inline auto CV_r_AntialiasingMode_CB = PreyGlobal<int>(0x2B0EE80);
	static inline auto CV_r_AntialiasingMode = PreyGlobal<int>(0x2B0EE84);
	static inline auto CV_r_AntialiasingModeSCull = PreyGlobal<int>(0x2B0EE88);
	static inline auto CV_r_AntialiasingTAAPattern = PreyGlobal<int>(0x2B0EE8C);
	static inline auto CV_r_AntialiasingTAAFalloffHiFreq = PreyGlobal<float>(0x2B0EE90);
	static inline auto CV_r_AntialiasingTAAFalloffLowFreq = PreyGlobal<float>(0x2B0EE94);
	static inline auto CV_r_AntialiasingTAASharpening = PreyGlobal<float>(0x2B0EE98);
	static inline auto CV_r_AntialiasingTSAAMipBias = PreyGlobal<float>(0x2B0EE9C);
	static inline auto CV_r_AntialiasingTSAASubpixelDetection = PreyGlobal<float>(0x2B0EEA0);
	static inline auto CV_r_AntialiasingTSAASmoothness = PreyGlobal<float>(0x2B0EEA4);
	static inline auto CV_r_FogDepthTest = PreyGlobal<float>(0x2B0EEA8);
	static inline auto CV_r_FogShadows = PreyGlobal<int>(0x2B0EEAC);
	static inline auto CV_r_FogShadowsMode = PreyGlobal<int>(0x2B0EEB0);
	static inline auto CV_r_FogShadowsWater = PreyGlobal<int>(0x2B0EEB4);
	static inline auto CV_r_rain_maxviewdist = PreyGlobal<float>(0x2B0EEB8);
	static inline auto CV_r_rain_maxviewdist_deferred = PreyGlobal<float>(0x2B0EEBC);
	static inline auto CV_r_SSReflections = PreyGlobal<int>(0x2B0EEC0);
	static inline auto CV_r_SSReflHalfRes = PreyGlobal<int>(0x2B0EEC4);
	static inline auto CV_r_ArkSSR = PreyGlobal<int>(0x2B0EEC8);
	static inline auto CV_r_ssdo = PreyGlobal<int>(0x2B0EECC);
	static inline auto CV_r_ssdoHalfRes = PreyGlobal<int>(0x2B0EED0);
	static inline auto CV_r_ssdoColorBleeding = PreyGlobal<int>(0x2B0EED4);
	static inline auto CV_r_ssdoRadius = PreyGlobal<float>(0x2B0EED8);
	static inline auto CV_r_ssdoRadiusMin = PreyGlobal<float>(0x2B0EEDC);
	static inline auto CV_r_ssdoRadiusMax = PreyGlobal<float>(0x2B0EEE0);
	static inline auto CV_r_ssdoAmountDirect = PreyGlobal<float>(0x2B0EEE4);
	static inline auto CV_r_ssdoAmountAmbient = PreyGlobal<float>(0x2B0EEE8);
	static inline auto CV_r_ssdoAmountReflection = PreyGlobal<float>(0x2B0EEEC);
	static inline auto CV_r_ArkSSDO = PreyGlobal<int>(0x2B0EEF0);
	static inline auto CV_r_CustomResMaxSize = PreyGlobal<int>(0x2B0EEF4);
	static inline auto CV_r_CustomResWidth = PreyGlobal<int>(0x2B0EEF8);
	static inline auto CV_r_CustomResHeight = PreyGlobal<int>(0x2B0EEFC);
	static inline auto CV_r_Supersampling = PreyGlobal<int>(0x2B0EF00);
	static inline auto CV_r_SupersamplingFilter = PreyGlobal<int>(0x2B0EF04);
	static inline auto CV_r_buffer_banksize = PreyGlobal<int>(0x2B0EF08);
	static inline auto CV_r_constantbuffer_banksize = PreyGlobal<int>(0x2B0EF0C);
	static inline auto CV_r_constantbuffer_watermark = PreyGlobal<int>(0x2B0EF10);
	static inline auto CV_r_transient_pool_size = PreyGlobal<int>(0x2B0EF14);
	static inline auto CV_r_buffer_enable_lockless_updates = PreyGlobal<int>(0x2B0EF18);
	static inline auto CV_r_enable_full_gpu_sync = PreyGlobal<int>(0x2B0EF1C);
	static inline auto CV_r_buffer_pool_max_allocs = PreyGlobal<int>(0x2B0EF20);
	static inline auto CV_r_buffer_pool_defrag_static = PreyGlobal<int>(0x2B0EF24);
	static inline auto CV_r_buffer_pool_defrag_static_shared = PreyGlobal<int>(0x2B0EF28);
	static inline auto CV_r_buffer_pool_defrag_dynamic = PreyGlobal<int>(0x2B0EF2C);
	static inline auto CV_r_buffer_pool_defrag_max_moves = PreyGlobal<int>(0x2B0EF30);
	static inline auto CV_r_ParticleVerticePoolSize = PreyGlobal<int>(0x2B0EF34);
	static inline auto CV_r_GeomCacheInstanceThreshold = PreyGlobal<int>(0x2B0EF38);
	static inline auto CV_r_VisAreaClipLightsPerPixel = PreyGlobal<int>(0x2B0EF3C);
	static inline auto CV_r_VolumetricFog = PreyGlobal<int>(0x2B0EF40);
	static inline auto CV_r_VolumetricFogPerFrame = PreyGlobal<int>(0x2B0EF44);
	static inline auto CV_r_VolumetricFogTexScale = PreyGlobal<int>(0x2B0EF48);
	static inline auto CV_r_VolumetricFogTexDepth = PreyGlobal<int>(0x2B0EF4C);
	static inline auto CV_r_VolumetricFogReprojectionBlendFactor = PreyGlobal<float>(0x2B0EF50);
	static inline auto CV_r_VolumetricFogSample = PreyGlobal<int>(0x2B0EF54);
	static inline auto CV_r_VolumetricFogShadow = PreyGlobal<int>(0x2B0EF58);
	static inline auto CV_r_VolumetricFogDownscaledSunShadow = PreyGlobal<int>(0x2B0EF5C);
	static inline auto CV_r_VolumetricFogDownscaledSunShadowRatio = PreyGlobal<int>(0x2B0EF60);
	static inline auto CV_r_VolumetricFogReprojectionMode = PreyGlobal<int>(0x2B0EF64);
	static inline auto CV_r_VolumetricFogMinimumLightBulbSize = PreyGlobal<float>(0x2B0EF68);
	static inline auto CV_r_VolumetricFogSunLightCorrection = PreyGlobal<int>(0x2B0EF6C);
	static inline auto CV_r_MorphFade = PreyGlobal<float>(0x2B0EF70);
	static inline auto CV_d3d11_CBUpdateStats = PreyGlobal<int>(0x2B0EF74);
	static inline auto CV_d3d11_forcedFeatureLevel = PreyGlobal<ICVar*>(0x2B0EF78);
	static inline auto CV_d3d11_preventDriverThreading = PreyGlobal<int>(0x2B0EF80);
	static inline auto CV_r_VolumetricClouds = PreyGlobal<int>(0x2B0EF84);
	static inline auto CV_r_VolumetricCloudsRaymarchStepNum = PreyGlobal<int>(0x2B0EF88);
	static inline auto CV_r_VolumetricCloudsPipeline = PreyGlobal<int>(0x2B0EF8C);
	static inline auto CV_r_VolumetricCloudsStereoReprojection = PreyGlobal<int>(0x2B0EF90);
	static inline auto CV_r_VolumetricCloudsTemporalReprojection = PreyGlobal<int>(0x2B0EF94);
	static inline auto CV_r_VolumetricCloudsShadowResolution = PreyGlobal<int>(0x2B0EF98);
	static inline auto CV_r_GpuParticles = PreyGlobal<int>(0x2B0EF9C);
	static inline auto CV_r_GpuParticlesConstantRadiusBoundingBoxes = PreyGlobal<int>(0x2B0EFA0);
	ICVar* CV_capture_frames;
	ICVar* CV_capture_folder;
	ICVar* CV_capture_file_format;
	ICVar* CV_capture_frame_once;
	ICVar* CV_capture_file_name;
	ICVar* CV_capture_file_prefix;
	ICVar* m_CVWidth;
	ICVar* m_CVHeight;
	ICVar* m_CVFullScreen;
	ICVar* m_CVColorBits;
	ICVar* m_CVDisplayInfo;
	static inline auto s_overscanBorders = PreyGlobal<Vec2>(0x2B0F010);
	static inline auto CV_r_LightBeamDepthPass = PreyGlobal<int>(0x2B0EFA4);
	static inline auto CV_r_EnableRenderDoc = PreyGlobal<int>(0x2B0EFA8);

	void InitCVars() { FInitCVars(this); }
	static void Cmd_ShowRenderTarget(IConsoleCmdArgs* pArgs) { FCmd_ShowRenderTarget(pArgs); }
	static void OnChange_CachedShadows(ICVar* pCVar) { FOnChange_CachedShadows(pCVar); }
	static void OnChange_GeomInstancingThreshold(ICVar* pVar) { FOnChange_GeomInstancingThreshold(pVar); }
	static void OnChange_ArkSSR(ICVar* _pVar) { FOnChange_ArkSSR(_pVar); }
	static void OnChange_ArkSSDO(ICVar* _pVar) { FOnChange_ArkSSDO(_pVar); }

#if 0
	static int GetTexturesStreamPoolSize();
	void InitExternalCVars();
	void CacheCaptureCVars();
#endif

	static inline auto FInitCVars = PreyFunction<void(CRendererCVars* const _this)>(0xE9AD50);
	static inline auto FCmd_ShowRenderTarget = PreyFunction<void(IConsoleCmdArgs* pArgs)>(0xE99BD0);
	static inline auto FOnChange_CachedShadows = PreyFunction<void(ICVar* pCVar)>(0xEA2560);
	static inline auto FOnChange_GeomInstancingThreshold = PreyFunction<void(ICVar* pVar)>(0xEA25A0);
	static inline auto FOnChange_ArkSSR = PreyFunction<void(ICVar* _pVar)>(0xEA2440);
	static inline auto FOnChange_ArkSSDO = PreyFunction<void(ICVar* _pVar)>(0xEA23F0);
};

static_assert(sizeof(CRendererCVars) == 88);

// CCVarUpdateRecorder
// Header:  CryEngine/renderdll/common/RendererCVars.h
// Include: Prey/RenderDll/Common/RendererCVars.h
class CCVarUpdateRecorder : public IConsoleVarSink
{ // Size=64 (0x40)
public:
	// CCVarUpdateRecorder::SUpdateRecord
	// Header:  CryEngine/renderdll/common/RendererCVars.h
	struct SUpdateRecord
	{ // Size=80 (0x50)
		union
		{
			int intValue;
			float floatValue;
			char stringValue[64];
		};

		const char* name;
		int type;

#if 0
		SUpdateRecord(ICVar* _arg0_);
#endif
	};

	using CVarList = std::vector<CCVarUpdateRecorder::SUpdateRecord>;

	std::vector<CCVarUpdateRecorder::SUpdateRecord> m_updatedCVars[2];
	IConsole* m_pConsole;

	CCVarUpdateRecorder(IConsole* pConsole);
	virtual ~CCVarUpdateRecorder();
	virtual bool OnBeforeVarChange(ICVar* pVar, const char* sNewValue);
	virtual void OnAfterVarChange(ICVar* pVar);
	void Reset() { FReset(this); }
	const std::vector<CCVarUpdateRecorder::SUpdateRecord>& GetCVars() const { return FGetCVars(this); }
	const CCVarUpdateRecorder::SUpdateRecord* GetCVar(const char* cvarName) const { return FGetCVar(this, cvarName); }

	static inline auto FCCVarUpdateRecorderOv1 = PreyFunction<void(CCVarUpdateRecorder* const _this, IConsole* pConsole)>(0xE99960);
	static inline auto FBitNotCCVarUpdateRecorder = PreyFunction<void(CCVarUpdateRecorder* const _this)>(0xE999B0);
	static inline auto FOnBeforeVarChange = PreyFunction<bool(CCVarUpdateRecorder* const _this, ICVar* pVar, const char* sNewValue)>(0x1B933B0);
	static inline auto FOnAfterVarChange = PreyFunction<void(CCVarUpdateRecorder* const _this, ICVar* pVar)>(0xEA2390);
	static inline auto FReset = PreyFunction<void(CCVarUpdateRecorder* const _this)>(0xEA2670);
	static inline auto FGetCVars = PreyFunction<const std::vector<CCVarUpdateRecorder::SUpdateRecord>& (const CCVarUpdateRecorder* const _this)>(0xE9AD30);
	static inline auto FGetCVar = PreyFunction<const CCVarUpdateRecorder::SUpdateRecord* (const CCVarUpdateRecorder* const _this, const char* cvarName)>(0xE9ACC0);
};
